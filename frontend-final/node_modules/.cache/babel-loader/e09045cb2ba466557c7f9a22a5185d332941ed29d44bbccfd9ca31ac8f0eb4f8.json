{"ast":null,"code":"var _jsxFileName = \"/Users/sabria/Downloads/University/CS321/CR-Docker/CodeRush/frontend-final/src/ProblemPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Div, Text, Button } from 'atomize';\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProblemPage = ({\n  isDuelMode\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [code, setCode] = useState('# Start coding here\\n');\n  const [output, setOutput] = useState('');\n  const [messages, setMessages] = useState([]); // Store WebSocket messages\n  const [socket, setSocket] = useState(null); // WebSocket instance\n  const [playerMessage, setPlayerMessage] = useState(''); // Input for sending messages\n\n  // WebSocket connection for Duel Mode\n  useEffect(() => {\n    if (isDuelMode) {\n      const ws = new WebSocket('ws://localhost:8080/ws/duel');\n      setSocket(ws);\n\n      // Listen for incoming messages\n      ws.onmessage = event => {\n        const receivedMessage = event.data;\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      };\n      ws.onopen = () => {\n        console.log('WebSocket connection established');\n        ws.send(JSON.stringify({\n          type: 'JOIN',\n          payload: `Player joined problem ${id}`\n        }));\n      };\n      ws.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n\n      // Cleanup WebSocket on unmount\n      return () => ws.close();\n    }\n  }, [isDuelMode, id]);\n\n  // Handle message submission\n  const sendMessage = () => {\n    if (socket && playerMessage.trim()) {\n      socket.send(JSON.stringify({\n        type: 'MESSAGE',\n        payload: playerMessage\n      }));\n      setPlayerMessage(''); // Clear input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Div, {\n    d: \"flex\",\n    flexDir: \"row\",\n    minH: \"100vh\",\n    p: \"2rem\",\n    children: [/*#__PURE__*/_jsxDEV(Div, {\n      w: \"50%\",\n      p: \"1rem\",\n      border: \"1px solid #e0e0e0\",\n      shadow: \"4\",\n      rounded: \"lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      w: \"50%\",\n      p: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Editor, {\n        height: \"50vh\",\n        language: \"python\",\n        value: code,\n        onChange: setCode,\n        theme: \"vs-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), isDuelMode && /*#__PURE__*/_jsxDEV(Div, {\n        bg: \"gray100\",\n        p: \"1rem\",\n        rounded: \"md\",\n        m: {\n          t: \"1rem\"\n        },\n        border: \"1px solid\",\n        borderColor: \"gray300\",\n        h: \"200px\",\n        overflow: \"scroll\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          textSize: \"subheader\",\n          m: {\n            b: \"1rem\"\n          },\n          children: \"Real-Time Messages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Text, {\n          textSize: \"body\",\n          textColor: \"gray800\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n          textSize: \"body\",\n          textColor: \"gray500\",\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), isDuelMode && /*#__PURE__*/_jsxDEV(Div, {\n        d: \"flex\",\n        m: {\n          t: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: playerMessage,\n          onChange: e => setPlayerMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          style: {\n            flex: 1,\n            padding: '0.5rem',\n            marginRight: '0.5rem',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendMessage,\n          bg: \"info700\",\n          hoverBg: \"info800\",\n          textColor: \"white\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        bg: \"gray100\",\n        p: \"1rem\",\n        rounded: \"md\",\n        m: {\n          t: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          tag: \"pre\",\n          textSize: \"body\",\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ProblemPage, \"xz0+ViWjHi/RhmGOuuFqH/oecqY=\", false, function () {\n  return [useParams];\n});\n_c = ProblemPage;\nexport default ProblemPage;\nvar _c;\n$RefreshReg$(_c, \"ProblemPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Div","Text","Button","Editor","jsxDEV","_jsxDEV","ProblemPage","isDuelMode","_s","id","code","setCode","output","setOutput","messages","setMessages","socket","setSocket","playerMessage","setPlayerMessage","ws","WebSocket","onmessage","event","receivedMessage","data","prevMessages","onopen","console","log","send","JSON","stringify","type","payload","onclose","close","sendMessage","trim","d","flexDir","minH","p","children","w","border","shadow","rounded","fileName","_jsxFileName","lineNumber","columnNumber","height","language","value","onChange","theme","bg","m","t","borderColor","h","overflow","textSize","b","length","map","msg","index","textColor","e","target","placeholder","style","flex","padding","marginRight","borderRadius","onClick","hoverBg","tag","_c","$RefreshReg$"],"sources":["/Users/sabria/Downloads/University/CS321/CR-Docker/CodeRush/frontend-final/src/ProblemPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Div, Text, Button } from 'atomize';\nimport Editor from \"@monaco-editor/react\";\n\nconst ProblemPage = ({ isDuelMode }) => {\n    const { id } = useParams();\n    const [code, setCode] = useState('# Start coding here\\n');\n    const [output, setOutput] = useState('');\n    const [messages, setMessages] = useState([]); // Store WebSocket messages\n    const [socket, setSocket] = useState(null); // WebSocket instance\n    const [playerMessage, setPlayerMessage] = useState(''); // Input for sending messages\n\n    // WebSocket connection for Duel Mode\n    useEffect(() => {\n        if (isDuelMode) {\n            const ws = new WebSocket('ws://localhost:8080/ws/duel');\n            setSocket(ws);\n\n            // Listen for incoming messages\n            ws.onmessage = (event) => {\n                const receivedMessage = event.data;\n                setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n            };\n\n            ws.onopen = () => {\n                console.log('WebSocket connection established');\n                ws.send(JSON.stringify({ type: 'JOIN', payload: `Player joined problem ${id}` }));\n            };\n\n            ws.onclose = () => {\n                console.log('WebSocket connection closed');\n            };\n\n            // Cleanup WebSocket on unmount\n            return () => ws.close();\n        }\n    }, [isDuelMode, id]);\n\n    // Handle message submission\n    const sendMessage = () => {\n        if (socket && playerMessage.trim()) {\n            socket.send(JSON.stringify({ type: 'MESSAGE', payload: playerMessage }));\n            setPlayerMessage(''); // Clear input field\n        }\n    };\n\n    return (\n        <Div d=\"flex\" flexDir=\"row\" minH=\"100vh\" p=\"2rem\">\n            {/* Left Side: Problem Details */}\n            <Div w=\"50%\" p=\"1rem\" border=\"1px solid #e0e0e0\" shadow=\"4\" rounded=\"lg\">\n                {/* Existing problem details */}\n            </Div>\n\n            {/* Right Side: Code Editor and Output */}\n            <Div w=\"50%\" p=\"1rem\">\n                <Editor\n                    height=\"50vh\"\n                    language=\"python\"\n                    value={code}\n                    onChange={setCode}\n                    theme=\"vs-dark\"\n                />\n\n                {/* WebSocket Message Box for Duel Mode */}\n                {isDuelMode && (\n                    <Div\n                        bg=\"gray100\"\n                        p=\"1rem\"\n                        rounded=\"md\"\n                        m={{ t: \"1rem\" }}\n                        border=\"1px solid\"\n                        borderColor=\"gray300\"\n                        h=\"200px\"\n                        overflow=\"scroll\"\n                    >\n                        <Text textSize=\"subheader\" m={{ b: \"1rem\" }}>\n                            Real-Time Messages:\n                        </Text>\n                        {messages.length > 0 ? (\n                            messages.map((msg, index) => (\n                                <Text key={index} textSize=\"body\" textColor=\"gray800\">\n                                    {msg}\n                                </Text>\n                            ))\n                        ) : (\n                            <Text textSize=\"body\" textColor=\"gray500\">\n                                No messages yet.\n                            </Text>\n                        )}\n                    </Div>\n                )}\n\n                {/* Message Input and Send Button */}\n                {isDuelMode && (\n                    <Div d=\"flex\" m={{ t: \"1rem\" }}>\n                        <input\n                            type=\"text\"\n                            value={playerMessage}\n                            onChange={(e) => setPlayerMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            style={{\n                                flex: 1,\n                                padding: '0.5rem',\n                                marginRight: '0.5rem',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                            }}\n                        />\n                        <Button\n                            onClick={sendMessage}\n                            bg=\"info700\"\n                            hoverBg=\"info800\"\n                            textColor=\"white\"\n                        >\n                            Send\n                        </Button>\n                    </Div>\n                )}\n\n                {/* Output Window */}\n                <Div bg=\"gray100\" p=\"1rem\" rounded=\"md\" m={{ t: \"1rem\" }}>\n                    <Text tag=\"pre\" textSize=\"body\">\n                        {output}\n                    </Text>\n                </Div>\n            </Div>\n        </Div>\n    );\n};\n\nexport default ProblemPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}